--(2)
declare
    v_dept_name  departments.department_name%type;
    v_job_id     employees.job_id%type;
    v_salary     employees.salary%type;
    v_annual_sal employees.salary%type;
begin
    select  d.department_name, e.job_id, nvl(e.salary, 0),  12 * (nvl(e.salary, 0) + nvl(e.salary, 0) * nvl(e.commission_pct, 0))
    into    v_dept_name, v_job_id, v_salary, v_annual_sal
    from    employees e, departments d
    where   e.department_id = d.department_id
    and     e.employee_id = &id;
    
    dbms_output.put_line('부서이름 : ' || v_dept_name || ', job_id : ' 
                                      || v_job_id || ', 급여 : ' 
                                      || v_salary || ', 연간 총수입 : ' || v_annual_sal);
end;
/
--(3)
declare
    v_hire_date employees.hire_date%type;
begin
    select hire_date
    into   v_hire_date
    from   employees
    where  employee_id = &id;
    
    if to_char(v_hire_date, 'yyyy') >= 1998 then
        dbms_output.put_line('New Employee');
    else
        dbms_output.put_line('Career Employee');
    end if;
end;
/
--(4)
declare
begin
        for i in 1..9 loop
            if mod(i, 2) = 1 then
                dbms_output.put_line(i || '단');
                for j in 1..9 loop
                    dbms_output.put_line(i || '*' || j || ' = ' || i * j);
                end loop;
            end if;
        end loop;
end;
/
--(5)
declare
    cursor emp_cursor is
        select  employee_id, last_name, salary
        from    employees
        where   department_id = &id;
begin
    for emp_record in emp_cursor loop
        dbms_output.put_line('사번 : ' || emp_record.employee_id || ' 이름 : ' || emp_record.last_name || ' 급여 : ' || emp_record.salary);
    end loop;
end;
/
--(6)
create or replace procedure update_sal
    (p_id employees.employee_id%type,
     percent number)
is
    no_update exception;
begin
    update  employees
    set     salary = salary * (1 + percent / 100)
    where   employee_id = p_id;
    
    if sql%notfound then
        raise no_update;
    end if;
exception
    when no_update then
        dbms_output.put_line('No search employee!!');
end update_sal;
/
--(7)
create or replace procedure y_info
    (p_number varchar2)
is
    v_year      varchar2(10);
    v_number    varchar2(10);
    v_age       number;
    v_sex       varchar2(10);
begin  
    v_year   := substr(p_number, 1, 2);
    v_number := substr(p_number, 7, 1);
    --나이
    if v_number = 1 or v_number = 2 then
       v_year := v_year + 1900;
    elsif v_number = 3 or v_number = 4 then
       v_year := v_year + 2000;
    end if;
    
    v_age := to_char(sysdate, 'yyyy') - v_year + 1;
    
    --성별
    if v_number = 1 or v_number = 3 then
        v_sex := '남성';
    else
        v_sex := '여성';
    end if;
    dbms_output.put_line('나이 : ' || v_age || ' 성별 : ' || v_sex);
end y_info;
/
--(8)
create or replace function work_year
    (p_id employees.employee_id%type)
     return varchar2
is
    v_hire_date varchar2(10);
begin
    select to_char(sysdate, 'yyyy') - to_char(hire_date, 'yyyy')
    into v_hire_date
    from employees
    where employee_id = p_id;
    
    return v_hire_date;
end work_year;
/
--(9)
create or replace function get_manager
    (p_dept_name departments.department_name%type)
     return varchar2
is
    v_manager_name varchar2(10);
begin
    select  e.last_name
    into    v_manager_name
    from    employees e, departments d
    where   e.department_id = d.department_id
    and     e.employee_id = (select manager_id from departments where department_name = p_dept_name);
    return  v_manager_name;
end get_manager;
/
--(10)
select owner, object_name, object_type
from all_objects
where (object_type = 'FUNCTION' or object_type = 'PROCEDURE' or
       object_type = 'PACKAGE'  or object_type = 'PACKAGE BODY')
and owner = 'HR';
--(11)
declare
    v_star varchar2(20) := '*';
begin
    for i in 1..9 loop
        dbms_output.put_line(lpad(v_star, 10, '-'));
        v_star := v_star || '*';
    end loop;
end;
/